#/bin/sh 
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#

#hciattach /dev/ttyO1 texas

# File which indicates if this is the first boot
FTS_FILE='/etc/first_time_setup.txt'

# If this is the first time booting, do the folllowing
if [ ! -f $FTS_FILE ]; then

    # Create the log directory
    if [ ! -d /var/log/leeo ]; then
        mkdir -p /var/log/leeo
        echo "Creating /var/log/leeo directory" >> /var/log/leeo/system.log
    else
        echo "/var/log/leeo directory already exists" >> /var/log/leeo/system.log
    fi

    # Log the current time
    cur_time=$(date)
    echo "First time setup started at $cur_time" >> /var/log/leeo/system.log

    # Generate a serial number for the device and set it as an environment var if it doesn't already exist
    ret_code=$(grep -q "^DEVICESERIAL=" /etc/environment > /dev/null 2>&1)$?
    if [ $ret_code -ne 0 ]; then
        echo "No serial number found. Create one." >> /var/log/leeo/system.log
        date +%s | sha256sum | head -c 10 | sed s:^:DEVICESERIAL=: | sed 's:$:\
#:' >> /etc/environment
    fi

    # Install device packages
    echo "Installing necessary Leeo packages..." >> /var/log/leeo/system.log 
    nohup /etc/install_leeo_packages.sh 2>&1 &

    # First time setup complete. Set file to indicate this on subsequent boots
    touch $FTS_FILE
    echo "First time setup completed" >> /var/log/leeo/system.log 

else # Not the first boot
    # Create the log directory if it doesn't exist
    if [ ! -d /var/log/leeo ]; then
        mkdir -p /var/log/leeo
    fi

    if [ ! -f /var/log/leeo/uptime.txt ]; then
        echo "     #               Uptime | System                                     Boot up" >> /var/log/leeo/uptime.txt
        echo "----------------------------+---------------------------------------------------" >> /var/log/leeo/uptime.txt
    fi

    # Enter a log entry for the last uptime
    uprecords > /dev/null 2>&1
    ret_code=$?
    if [ $ret_code -eq 0 ]; then
        uprecords -B | grep -E "^\s+2" >> /var/log/leeo/uptime.txt
    else
        cur_time=$(date)
        echo "Could not get uptime at $cur_time." >> /var/log/leeo/uptime.txt
    fi
fi

echo '1-004c' > /sys/bus/i2c/devices/1-004c/driver/unbind
echo '1-0050' > /sys/bus/i2c/devices/1-0050/driver/unbind

/usr/lib/leeoalpha/sw-update/image-update-factory.sh


export PATH=$PATH:/usr/local/sbin

rm /usr/lib/leeoalpha/aging/aging_log.txt 
rm /usr/lib/leeoalpha/aging/als.txt 
rm /usr/lib/leeoalpha/aging/emmc_test.txt 
rm /usr/lib/leeoalpha/aging/eeprom_test.txt 
rm /usr/lib/leeoalpha/aging/temp.txt 
rm /usr/lib/leeoalpha/aging/time.txt 
rm /usr/lib/leeoalpha/aging/result.txt 
rm /usr/lib/leeoalpha/aging/led.txt
rm /usr/lib/leeoalpha/aging/humid.txt

if [ -f /usr/lib/leeoalpha/aging/non-aging.txt ]; then

    read last_time < /usr/lib/leeoalpha/aging/non-aging.txt

    /usr/lib/leeoalpha/aging/aging_led.sh &
    pid1=$!

    if [ "$last_time" -eq 0 ]; then
	
    	/usr/lib/leeoalpha/aging/aging_test.sh 200 $pid1 &
	pid2=$!
    else
	
	usr/lib/leeoalpha/aging/aging_test.sh 20 $pid1 &
	pid2=$!
    fi

else
    /usr/lib/leeoalpha/sensors/led_off.sh
    /usr/lib/leeoalpha/sensors/led_blue.sh
fi

exit 0

